version: '3.8'

services:
  vue:
    container_name: imahima_web_dev
    build:
      context: ./app/imahima
      dockerfile: Dockerfile.dev
    volumes:
      - ./app/imahima:/usr/src/app/
      - /usr/src/app/node_modules
    ports:
      - '8080:8080'
    environment:
      - VUE_APP_API_ENDPOINT_PROTOCOL=http
      - VUE_APP_API_ENDPOINT_HOST=localhost:8000

  django:
    container_name: imahima_server_dev
    build: ./server
    # データを永続化させる場合の設定。`host:container`でパスを記載
    volumes:
        - ./server/imahima_mura:/usr/src/server/
    # 開放するポートを指定。`host:container`でポートを記載
    ports:
        - 8000:8000
    # 環境変数を指定
    environment:
        # 1ならデバックモード
        - DEBUG=1
        # setting.pyに記載されているSECRET_KEYを記入
        - SECRET_KEY='django-insecure-(^-^)/++developkeydayoo(^-^)/++developkeydayoo(^-^)/++developkeydayoo'
        - DATABASE_ENGINE=django.db.backends.postgresql
        - DATABASE_DB=django_db
        - DATABASE_USER=django_db_user
        - DATABASE_PASSWORD=password1234
        - DATABASE_HOST=postgres
        - DATABASE_PORT=5432
        - REDIS_HOST=redis
        - REDIS_PORT=6379
    depends_on:
        - postgres
        - redis

  postgres:
    container_name: imahima_db_dev
    # 公式からイメージをpull
    image: postgres:14.1-alpine
    # データベースの永続化
    # ホストのディレクトリにマウントしない様に、先頭に`./`をつけない
    volumes:
        - postgres_data:/var/lib/postgresql/data
    ports:
        - 5432:5432
    # su権限を持つ、指定されたユーザーと同じ名前のデータベースを作成
    # valueはdjangoサービスで指定したものと同じ様に記載する
    environment:
        - POSTGRES_USER=django_db_user
        - POSTGRES_PASSWORD=password1234
        - POSTGRES_DB=django_db
  
  redis:
    container_name: imahima_redis_dev
    # 公式からイメージをpull
    image: redis:6.2.6-alpine
    ports:
        - 6379:6379
    # # データベースの永続化
    # # ホストのディレクトリにマウントしない様に、先頭に`./`をつけない
    # volumes:
    #     - postgres_data:/var/lib/postgresql/data

volumes:
    postgres_data: